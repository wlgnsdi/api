{
    "user": {
        "name": "류지훈",
        "profile": {
            "avatar": "https://img.notionusercontent.com/s3/prod-files-secure%2F83c75a39-3aba-4ba4-a792-7aefe4b07895%2Fd03114bf-73f3-47ce-9f80-335baafcf853%2F1000015088.jpg/size/w=40?exp=1753423031&sig=f1RRIgGvL_rRR0aknq_72gck4979S4QOdDqNSXu1vck&id=20d2dc3e-f514-8009-b918-c3293cbb4000&table=block&userId=7b94bbf7-75d0-4919-aa3a-8a279b564d7a",
            "bio": "Flutter 개발자입니다"
        }
    },
    "posts": [
        {
            "id": 101,
            "title": "Flutter 시작하기",
            "content": "Flutter로 첫 앱을 만들어봅시다",
            "likes": 15
        },
        {
            "id": 102,
            "title": "StatelessWidget 이해하기",
            "content": "불변 위젯이 무엇인지 알아봅시다",
            "likes": 22
        },
        {
            "id": 103,
            "title": "StatefulWidget과 상태 관리",
            "content": "내부 상태를 다루는 법을 배웁니다",
            "likes": 18
        },
        {
            "id": 104,
            "title": "Hot Reload와 Hot Restart 차이",
            "content": "개발 시 편리한 기능을 비교합니다",
            "likes": 30
        },
        {
            "id": 105,
            "title": "Flutter 레이아웃 기초",
            "content": "Row, Column, Container 사용법",
            "likes": 27
        },
        {
            "id": 106,
            "title": "Dart 문법 정리",
            "content": "Flutter 개발에 필요한 Dart 정리",
            "likes": 21
        },
        {
            "id": 107,
            "title": "build() 메서드란?",
            "content": "위젯 트리와 build 함수의 작동 방식",
            "likes": 17
        },
        {
            "id": 108,
            "title": "Navigator로 페이지 이동하기",
            "content": "화면 간 이동을 처리하는 방법",
            "likes": 24
        },
        {
            "id": 109,
            "title": "Flutter에서 이미지 다루기",
            "content": "Asset 이미지 및 네트워크 이미지 로딩",
            "likes": 20
        },
        {
            "id": 110,
            "title": "TextField와 폼 입력",
            "content": "사용자 입력을 받는 위젯들",
            "likes": 13
        },
        {
            "id": 111,
            "title": "ElevatedButton vs TextButton",
            "content": "버튼 종류와 사용법 비교",
            "likes": 19
        },
        {
            "id": 112,
            "title": "ListView 만들기",
            "content": "스크롤 가능한 리스트를 구현해보세요",
            "likes": 23
        },
        {
            "id": 113,
            "title": "Drawer로 사이드 메뉴 만들기",
            "content": "앱에 내비게이션 서랍 추가하기",
            "likes": 14
        },
        {
            "id": 114,
            "title": "앱 테마 설정하기",
            "content": "다크 모드와 컬러 테마 설정법",
            "likes": 25
        },
        {
            "id": 115,
            "title": "아이콘 사용법",
            "content": "Material 아이콘과 커스텀 아이콘",
            "likes": 12
        },
        {
            "id": 116,
            "title": "앱에 폰트 적용하기",
            "content": "커스텀 폰트를 프로젝트에 추가하기",
            "likes": 16
        },
        {
            "id": 117,
            "title": "애니메이션 기초",
            "content": "AnimatedContainer와 기본 애니메이션",
            "likes": 20
        },
        {
            "id": 118,
            "title": "Future와 async/await",
            "content": "비동기 처리의 기본을 알아봅니다",
            "likes": 26
        },
        {
            "id": 119,
            "title": "Provider로 상태 관리하기",
            "content": "가장 많이 쓰이는 상태 관리 도구",
            "likes": 32
        },
        {
            "id": 120,
            "title": "Riverpod 기초 사용법",
            "content": "Provider의 진화된 버전 알아보기",
            "likes": 35
        },
        {
            "id": 121,
            "title": "http 패키지로 API 요청",
            "content": "GET, POST 요청 보내는 방법",
            "likes": 29
        },
        {
            "id": 122,
            "title": "JSON 파싱하기",
            "content": "Map과 모델 클래스를 사용하는 법",
            "likes": 34
        },
        {
            "id": 123,
            "title": "shared_preferences 사용하기",
            "content": "로컬 저장소에 값 저장하기",
            "likes": 19
        },
        {
            "id": 124,
            "title": "앱에 Firebase 연동하기",
            "content": "Firebase 프로젝트와 연결하는 방법",
            "likes": 36
        },
        {
            "id": 125,
            "title": "Firestore CRUD 기본",
            "content": "Cloud Firestore에 데이터 저장하고 읽기",
            "likes": 33
        },
        {
            "id": 126,
            "title": "Flutter에서 로그인 구현",
            "content": "Firebase Auth와 연동한 이메일 로그인",
            "likes": 31
        },
        {
            "id": 127,
            "title": "Google Sign-In 연동하기",
            "content": "구글 계정으로 로그인 기능 만들기",
            "likes": 28
        },
        {
            "id": 128,
            "title": "Flutter 앱 배포 준비",
            "content": "릴리즈 빌드와 사전 설정",
            "likes": 24
        },
        {
            "id": 129,
            "title": "앱 퍼포먼스 최적화",
            "content": "build 호출 줄이기, const 사용",
            "likes": 22
        },
        {
            "id": 130,
            "title": "Flutter 웹 지원하기",
            "content": "웹 환경에서 Flutter 앱 실행",
            "likes": 18
        },
        {
            "id": 131,
            "title": "애드몹 광고 넣기",
            "content": "광고로 수익을 창출하는 방법",
            "likes": 15
        },
        {
            "id": 132,
            "title": "앱에서 위치 정보 사용하기",
            "content": "geolocator를 활용한 위치 기능",
            "likes": 17
        },
        {
            "id": 133,
            "title": "Flutter에서 지도 띄우기",
            "content": "google_maps_flutter 사용법",
            "likes": 20
        },
        {
            "id": 134,
            "title": "BottomNavigationBar 만들기",
            "content": "앱 하단 내비게이션 구현",
            "likes": 26
        },
        {
            "id": 135,
            "title": "TabBar와 TabView",
            "content": "탭 전환 기능을 구현해보세요",
            "likes": 19
        },
        {
            "id": 136,
            "title": "CustomPainter 기초",
            "content": "캔버스를 활용한 커스텀 UI",
            "likes": 22
        },
        {
            "id": 137,
            "title": "Isolate로 병렬 처리",
            "content": "무거운 작업을 별도 쓰레드로 처리",
            "likes": 23
        },
        {
            "id": 138,
            "title": "Flutter 앱에 다국어 지원",
            "content": "intl 패키지로 번역 기능 구현",
            "likes": 27
        },
        {
            "id": 139,
            "title": "플러터 폼 검증",
            "content": "유효성 검사 및 에러 메시지 처리",
            "likes": 14
        },
        {
            "id": 140,
            "title": "Flutter에서 카메라 사용",
            "content": "camera 패키지로 사진 촬영 기능 구현",
            "likes": 21
        },
        {
            "id": 141,
            "title": "앱에서 파일 업로드하기",
            "content": "서버에 이미지나 파일 보내기",
            "likes": 18
        },
        {
            "id": 142,
            "title": "Flutter 프로젝트 구조화",
            "content": "폴더 구조와 코드 정리 전략",
            "likes": 30
        }
    ]
}
